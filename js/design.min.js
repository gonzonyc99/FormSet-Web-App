var MODELS = [{
    id: "Crosshatch",
    title: "Crosshatch",
    item: [{
        id: "Crosshatch01",
        title: "Crosshatch #1",
        image: "images/models/Crosshatch_1.jpg",
        model: "images/models/Crosshatch_1.png"
    }, {
        id: "Crosshatch02",
        title: "Crosshatch #2",
        image: "images/models/Crosshatch_2.jpg",
        model: "images/models/Crosshatch_2.png"
    }, {
        id: "Crosshatch03",
        title: "Crosshatch #3",
        image: "images/models/Crosshatch_3.jpg",
        model: "images/models/Crosshatch_3.png"
    }, {
        id: "Crosshatch04",
        title: "Crosshatch #4",
        image: "images/models/Crosshatch_4.jpg",
        model: "images/models/Crosshatch_4.png"
    }]
}, {
    id: "Dimple",
    title: "Dimple",
    item: [{
        id: "Dimple01",
        title: "Dimple #1",
        image: "images/models/Dimple_1.jpg",
        model: "images/models/Dimple_1.png"
    }, {
        id: "Dimple02",
        title: "Dimple #2",
        image: "images/models/Dimple_2.jpg",
        model: "images/models/Dimple_2.png"
    }, {
        id: "Dimple03",
        title: "Dimple #3",
        image: "images/models/Dimple_3.jpg",
        model: "images/models/Dimple_3.png"
    }, {
        id: "Dimple04",
        title: "Dimple #4",
        image: "images/models/Dimple_4.jpg",
        model: "images/models/Dimple_4.png"
    }]
}, {
    id: "Fan",
    title: "Fan",
    item: [{
        id: "Fan01",
        title: "Fan #1",
        image: "images/models/Fan_1.jpg",
        model: "images/models/Fan_1.png"
    }, {
        id: "Fan04",
        title: "Fan #4",
        image: "images/models/Fan_4.jpg",
        model: "images/models/Fan_4.png"
    }, {
        id: "Fan03",
        title: "Fan #3",
        image: "images/models/Fan_3.jpg",
        model: "images/models/Fan_3.png"
    }, {
        id: "Fan02",
        title: "Fan #2",
        image: "images/models/Fan_2.jpg",
        model: "images/models/Fan_2.png"
    }]
}, {
    id: "Pad",
    title: "Pad",
    item: [{
        id: "Pad01",
        title: "Pad #1",
        image: "images/models/Pad_1.jpg",
        model: "images/models/Pad_1.png"
    }]
}, {
    id: "Petal",
    title: "Petal",
    item: [{
        id: "Petal01",
        title: "Petal #1",
        image: "images/models/Petal_1.jpg",
        model: "images/models/Petal_1.png"
    }, {
        id: "Petal02",
        title: "Petal #2",
        image: "images/models/Petal_2.jpg",
        model: "images/models/Petal_2.png"
    }]
}, {
    id: "Pipe",
    title: "Pipe",
    item: [{
        id: "Pipe01",
        title: "Pipe #1",
        image: "images/models/Pipe_1.jpg",
        model: "images/models/Pipe_1.png"
    }, {
        id: "Pipe02",
        title: "Pipe #2",
        image: "images/models/Pipe_2.jpg",
        model: "images/models/Pipe_2.png"
    }]
}, {
    id: "Ripple",
    title: "Ripple",
    item: [{
        id: "Ripple01",
        title: "Ripple #1",
        image: "images/models/Ripple_1.jpg",
        model: "images/models/Ripple_1.png"
    }, {
        id: "Ripple02",
        title: "Ripple #2",
        image: "images/models/Ripple_2.jpg",
        model: "images/models/Ripple_2.png"
    }]
}, {
    id: "Silo",
    title: "Silo",
    item: [{
        id: "Silo01",
        title: "Silo #1",
        image: "images/models/Silo_1.jpg",
        model: "images/models/Silo_1.png"
    }, {
        id: "Silo02",
        title: "Silo #2",
        image: "images/models/Silo_2.jpg",
        model: "images/models/Silo_2.png"
    }]
}, {
    id: "Square",
    title: "Square",
    item: [{
        id: "Square01",
        title: "Square #1",
        image: "images/models/Square_1.jpg",
        model: "images/models/Square_1.png"
    }]
}, {
    id: "Video16-9",
    title: "Video 16 : 9",
    item: []
}, {
    id: "Video4-3",
    //8_22_Stage_Ag_notes.xls - #10
    title: "Video 4 : 3",
    item: []
}, {
    id: "FinalTouches",
    title: "Final Touches",
    item: [{
        id: "FinalTouches01",
        title: "Person",
        image: "images/models/person01.png",
        model: "images/models/Person.png"
    }, {
        id: "FinalTouches02",
        title: "Podium",
        image: "images/models/Podium.png",
        model: "images/models/Podium.png"
    }]
}];
var FORMSETDESIGN = function(e, t) {
    var n = this;
    n._width = e;
    n._height = t;
    n._canvas = null;
    n._wall_width = 0;
    n._wall_height = 0;
    n._stage_width = 0;
    n._stage_height = 0;
    n._unitSize = 0;
    n._modelSize = 2;
    n._left = 0;
    n._top = 0;
    n._wRow = 0;
    n._wCol = 0;
    n._sRow = 0;
    n._sCol = 0;
    n._total = 0;
    n._loaded = 0;
    n._items = MODELS;
    n._rect = null;
    n._lines = new Array;
    n._preCanvas = null;
    n._width1 = 100;
    n._height1 = 100;
    n._userImg = null;
    n._customIndex = 3;
    
    //8_22_Stage_Ag_notes.xls - #6
    n._bDrawStage = false;
    n._imgData = null;
    
    n._initialize = function(e) {
        n._canvas = n._init_canvas(e);
        n._preCanvas = n._init_canvas("preview-stage");
        n._total = 0;
        for (var t = 0; t < n._items.length; t++) n._total += n._items[t].item.length;
        for (var t = 0; t < n._items.length; t++) {
            n._loadModels(t, 0);
            break
        }
    };
    n._init_canvas = function(e) {
        var t = new fabric.Canvas(e, {
            renderOnAddition: false,
            selectionColor: "rgba(255,255,255,0.1)",
            selectionBorderColor: "rgba(100, 100, 255, 0.3)",
            selectionDashArray: [5, 5],
            selection: false
        });
        t.setWidth(n._width);
        t.setHeight(n._height);
        t.calcOffset();
        return t
    };
    n._loadModels = function(e, t) {
        fabric.Image.fromURL(n._items[e].item[t].model, function(r) {
            n._loaded++;
            //console.log(n._loaded + "  ,  " + n._total);
            n._items[e].item[t].object = r;
            var i = t;
            var s;
            if (t + 1 < n._items[e].item.length) {
                i = t + 1;
                s = e;
                n._loadModels(s, i)
            } else {
                s = e;
                i = 0;
                do {
                    s++
                } while (s < n._items.length && n._items[s].item.length == 0);
                if (s < n._items.length) n._loadModels(s, 0);
                else return
            }
        })
    };
    n.setRowAndCol = function(e, t, r, i) {
        n._stage_width = r;
        n._stage_height = i;
        n._wall_width = e;
        n._wall_height = t;
        n._sRow = n._stage_width / n._modelSize;
        n._sCol = n._stage_height / n._modelSize;
        n._wRow = n._wall_width / n._modelSize;
        n._wCol = n._wall_height / n._modelSize;
        var s = n._width - 20;
        var o = n._height - 20;
        n._unitSize = Math.min(parseInt(s / n._wRow), parseInt(o / n._wCol));
        var u = n._canvas.getObjects();
        while (u.length > 0) {
            n._canvas.remove(u[0]);
            u = n._canvas.getObjects()
        }
        n._rect = new fabric.Rect({
            left: 0,
            top: 0,
            width: 100,
            height: 100,
            fill: "#FFF",
            stroke: "#AAA",
            strokeWidth: 1,
            selectable: false
        });
        n._canvas.add(n._rect);
        var a = n._unitSize * n._wRow;
        var f = n._unitSize * n._wCol;
        n._left = (n._width - a) / 2;
        n._top = (n._height - f) / 2;
        n._rect.set({
            left: n._left,
            top: n._top,
            width: a,
            height: f
        });
        n._lines = new Array;
        for (var l = 1; l < n._wRow; l++) {
            var c = n._left + l * n._unitSize;
            var h = c;
            var p = n._top;
            var d = n._top + f;
            var v = new fabric.Line([c, p, h, d], {
                fill: "#AAA",
                stroke: "#AAA",
                strokeWidth: 1,
                selectable: false
            });
            n._canvas.add(v);
            n._lines.push(v)
        }
        for (var l = 1; l < n._wCol; l++) {
            var c = n._left;
            var h = n._left + a;
            var p = n._top + l * n._unitSize;
            var d = p;
            var v = new fabric.Line([c, p, h, d], {
                fill: "#AAA",
                stroke: "#AAA",
                strokeWidth: 1,
                selectable: false
            });
            n._canvas.add(v);
            n._lines.push(v)
        }
        n._canvas.calcOffset();
        n._canvas.renderAll()
    };
    n.addObjectProc = function(e, t, r) {
        var i = $(e).parent().parent()[0].id;
        var s = e.id;
        var o = 1,
            u = 1;
        var a = null;
        for (var f = 0; f < n._items.length; f++) {
            if (n._items[f].id == i) {
                for (var l = 0; l < n._items[f].item.length; l++) {
                    if (n._items[f].item[l].id == s) {
                        a = n._items[f].item[l].object;
                        break
                    }
                }
            }
            if (a != null) break
        }
        if (a == null) return;
        if (i == "FinalTouches") {
            if (s == "FinalTouches01") {
                o = 2;
                u = 3
            } else if (s == "FinalTouches02") {
                o = 2;
                u = 2
            } else {
                o = -1;
                u = -1
            }
        }
        if (o == -1 || u == -1) {
            if (t >= n._left && t < n._left + n._unitSize * n._wRow && r >= n._top && r < n._top + n._unitSize * n._wCol) {
                var c = a.getWidth();
                var h = a.getHeight();
                c = n._unitSize;
                h = a.getHeight() * (c / a.getWidth());
                a.set({
                    left: t - c / 2,
                    top: r - h / 2,
                    width: c,
                    height: h
                });
                a.clone(function(e) {
                    var t = e.getLeft();
                    var r = e.getTop();
                    e.set({
                        left: 0,
                        top: 0,
                        originX: t,
                        originY: r
                    });
                    var a;
                    a = new fabric.Group([e], {
                        left: t,
                        top: r,
                        selectable: true,
                        hasControls: true,
                        hasRotatingPoint: false
                    });
                    a.row = -1;
                    a.col = -1;
                    a.obj_class = "form_item";
                    a.obj_type = i;
                    a.obj_id = s;
                    a.count_w = o;
                    a.count_h = u;
                    a.on("modified", function(e) {
                        var t = this.getLeft();
                        var r = this.getTop();
                        var i = this.getWidth();
                        var s = this.getHeight();
                        if (t < n._left || t + i > n._left + n._unitSize * n._wRow || r < n._top || r + s > n._top + n._unitSize * n._wCol) {
                            n._canvas.remove(this);
                            n._canvas.renderAll()
                        }
                    });
                    n._canvas.add(a);
                    n._canvas.calcOffset();
                    n._canvas.renderAll()
                })
            }
            return
        }
        for (var f = 0; f <= n._wRow - o; f++) {
            for (var l = 0; l <= n._wCol - u; l++) {
                var p = n._left + n._unitSize * f;
                var d = n._top + n._unitSize * l;
                if (t >= p && t < p + n._unitSize * o && r >= d && r < d + n._unitSize * u) {
                    a.set({
                        left: p,
                        top: d,
                        width: n._unitSize * o,
                        height: n._unitSize * u
                    });
                    a.clone(function(e) {
                        var t = e.getLeft();
                        var r = e.getTop();
                        if (i != "FinalTouches") {
                            var a = new fabric.Rect({
                                left: 0,
                                top: 0,
                                originX: t,
                                originY: r,
                                fill: "#DDDDDD",
                                width: n._unitSize * o,
                                height: n._unitSize * u
                            })
                        }
                        e.set({
                            left: 0,
                            top: 0,
                            originX: t,
                            originY: r,
                            width: n._unitSize * o,
                            height: n._unitSize * u
                        });
                        var c;
                        if (i != "FinalTouches") {
                            c = new fabric.Group([a, e], {
                                left: t,
                                top: r,
                                selectable: true,
                                hasControls: false,
                                hasRotatingPoint: false
                            })
                        } else {
                            c = new fabric.Group([e], {
                                left: t,
                                top: r,
                                selectable: true,
                                hasControls: false,
                                hasRotatingPoint: false
                            })
                        }
                        c.row = f;
                        c.col = l;
                        c.obj_class = "form_item";
                        c.obj_type = i;
                        c.obj_id = s;
                        c.count_w = o;
                        c.count_h = u;
                        c.on("moving", function(e) {
                            var t = e.e.layerX;
                            var r = e.e.layerY;
                            var i, s;
                            for (var o = 0; o <= n._wRow - this.count_w; o++) {
                                for (var u = 0; u <= n._wCol - this.count_h; u++) {
                                    i = n._left + n._unitSize * o;
                                    s = n._top + n._unitSize * u;
                                    if (t >= i && t < i + n._unitSize * this.count_w && r >= s && r < s + n._unitSize * this.count_h) {
                                        this.set({
                                            left: i,
                                            top: s
                                        });
                                        n._canvas.renderAll();
                                        return
                                    }
                                }
                            }
                        });
                        c.on("modified", function(e) {
                            var t = this.getLeft() + n._unitSize * (this.count_w - 1);
                            var r = this.getTop() + n._unitSize * (this.count_h - 1);
                            var i, s;
                            for (var o = 0; o <= n._wRow - this.count_w; o++) {
                                for (var u = 0; u <= n._wCol - this.count_h; u++) {
                                    i = n._left + n._unitSize * o;
                                    s = n._top + n._unitSize * u;
                                    if (t >= i && t < i + n._unitSize * this.count_w && r >= s && r < s + n._unitSize * this.count_h) {
                                        this.set({
                                            left: i,
                                            top: s
                                        });
                                        this.row = o;
                                        this.col = u;
                                        this.setCoords();
                                        n._canvas.renderAll();
                                        return
                                    }
                                }
                            }
                            n._canvas.remove(this);
                            n._canvas.renderAll()
                        });
                        n._canvas.add(c);
                        n._canvas.calcOffset();
                        n._canvas.renderAll()
                    });
                    return
                }
            }
        }
    };
    n.deleteSelectedObject = function() {
        var e = n._canvas.getActiveObject();
        if (e && typeof e.obj_class != "undefined" && e.obj_class == "form_item") {
            n._canvas.remove(e);
            n._canvas.renderAll()
        }
    };
    n.deleteAllItemsObject = function() {
        var e = n._canvas.getObjects();
        var t = true;
        var r = new Array;
        for (var i = 0; i < e.length; i++) {
            if (typeof e[i].obj_class != "undefined" && e[i].obj_class == "form_item") {
                r.push(e[i])
            }
        }
        for (var i = 0; i < r.length; i++) n._canvas.remove(r[i]);
        n._canvas.renderAll()
    };
    n.changeColor = function(e) {
        var t = n._canvas.getActiveObject();
        if (t && typeof t.obj_class != "undefined" && t.obj_class == "form_item" && t.obj_type != "FinalTouches") {
            var r = t.getObjects()[0];
            r.setFill(e);
            n._canvas.renderAll()
        }
    };
    n.resizeProc = function(e, t, r, i) {
        n._width = e;
        n._height = t;
        n._canvas.setWidth(n._width);
        n._canvas.setHeight(n._height);
        var e = n._width - 20;
        var t = n._height - 20;
        n._unitSize = Math.min(parseInt(e / n._wRow), parseInt(t / n._wCol));
        var s = n._unitSize * n._wRow;
        var o = n._unitSize * n._wCol;
        n._left = (n._width - s) / 2;
        n._top = (n._height - o) / 2;
        if (n._rect) {
            n._rect.set({
                left: n._left,
                top: n._top,
                width: s,
                height: o
            })
        }
        if (n._lines && n._lines.length != 0) {
            var u = 0;
            for (var a = 1; a < n._wRow; a++) {
                var f = n._lines[u];
                var l = n._left + a * n._unitSize;
                var c = l;
                var h = n._top;
                var p = n._top + o;
                f.set({
                    x1: l,
                    y1: h,
                    x2: c,
                    y2: p
                });
                u++
            }
            for (var a = 1; a < n._wCol; a++) {
                var l = n._left;
                var c = n._left + s;
                var h = n._top + a * n._unitSize;
                var p = h;
                var f = n._lines[u];
                f.set({
                    x1: l,
                    y1: h,
                    x2: c,
                    y2: p
                });
                u++
            }
        }
        var d = n._canvas.getObjects();
        for (var a = 0; a < d.length; a++) {
            if (typeof d[a].obj_class != "undefined" && d[a].obj_class == "form_item") {
                var v = d[a].getObjects();
                v[0].set({
                    left: 0,
                    top: 0,
                    width: n._unitSize,
                    height: n._unitSize
                });
                v[0].setCoords();
                v[1].set({
                    left: 0,
                    top: 0,
                    width: n._unitSize,
                    height: n._unitSize
                });
                v[1].setCoords();
                var m = n._left + n._unitSize * d[a].row;
                var g = n._top + n._unitSize * d[a].col;
                d[a].set({
                    left: m,
                    top: g,
                    width: n._unitSize,
                    height: n._unitSize
                });
                d[a].setCoords()
            }
        }
        n._canvas.calcOffset();
        n._canvas.renderAll();
        n._preCanvasResize(r, i)
    };
    n._preCanvasResize = function(e, t) {
    	n._width1 = e;
        n._height1 = t;
        n._preCanvas.setWidth(e);
        n._preCanvas.setHeight(t);
        n._preCanvas.calcOffset();
        n._preCanvas.renderAll()
    };
    n.drawPreview = function() {
        var e = n._preCanvas.getObjects();
        while (e.length > 0) {
            n._preCanvas.remove(e[0]);
            e = n._preCanvas.getObjects()
        }
        var t = n._width1 / 2;
        var r = n._height1 / 2;
        var i;
        var s, o;
        
        //8_22_Stage_Ag_notes.xls - #6
        if (n._bDrawStage === true && n._sRow > 0 && n._sCol > 0) {
            s = Math.max(n._sRow, n._wRow);
            o = n._wCol + n._sCol
        } else {
            s = n._wRow;
            o = n._wCol
        } if (n._userImg) n._preCanvas.add(n._userImg);
        i = Math.min(parseInt(t / s), parseInt(r / o));
        var u = n._width1 / 2;
        var a = n._height1 / 2;
        
        //8_22_Stage_Ag_notes.xls - #6
        if (n._bDrawStage === true && n._sRow > 0 && n._sCol > 0) {
            var f = i * n._sRow;
            var l = i * n._sCol;
            u = n._width1 / 2;
            a = n._height1 / 2 + i * o / 2 - l / 2;
            var c = new fabric.Rect({
                left: u,
                top: a,
                width: f,
                height: l,
                fill: "#000",
                selectable: false,
                originX: "center",
                originY: "center"
            });
            //add stage to preview canvas
            n._preCanvas.add(c);
            u = n._width1 / 2;
            a = n._height1 / 2 - i * o / 2 + i * n._wCol / 2
        }
        var h = n._canvas.toDataURL({
            format: "jpeg",
            quality: .8,
            left: n._left,
            top: n._top,
            width: n._rect.width + 1,
            height: n._rect.height + 1
        });
        fabric.Image.fromURL(h, function(e) {
            e.set({
                left: u,
                top: a,
                width: i * n._wRow,
                height: i * n._wCol,
                originX: "center",
                originY: "center",
                selectable: false
            });
            //add wall to preview canvas
            n._preCanvas.add(e);
            n._preCanvas.renderAll()
        })
    };
    n.addUploadedImage = function(e, t) {
        if (t == "upload-button") {
            fabric.Image.fromURL(e, function(e) {
                var t = e.width;
                var r = 0;
                t = n._width1 - 50;
                r = e.height * t / e.width;
                if (r > n._height1 - 50) {
                    r = n._height1 - 50;
                    t = e.width * r / e.height
                }
                if (n._userImg) n._preCanvas.remove(n._userImg);
                //console.log(t + " , " + r);
                n._userImg = e.set({
                    left: n._width1 / 2,
                    top: n._height1 / 2,
                    originY: "center",
                    originX: "center",
                    width: t,
                    height: r,
                    transparentCorners: false,
                    cornerSize: 20,
                    perPixelTargetFind: true,
                    hasRotatingPoint: false,
                    lockUniScaling: true
                });
                n._preCanvas.add(n._userImg);
                n._userImg.setCoords();
                n._preCanvas.sendToBack(n._userImg);
                n._preCanvas.calcOffset();
                n._preCanvas.renderAll()
            })
        } else if (t == "custom-button") {
            var r = document.createElement("img");
            r.src = e;
            r.id = "FinalTouches" + n._customIndex;
            n._customIndex++;
            $(r).insertBefore(".model-item .model-item-content button");
            $(r).draggable({
                drag: function(e, t) {
                    var n = getSnapProc(e.clientX, e.clientY - 10);
                    t.position.left = n.left;
                    t.position.top = n.top
                }
            });
            for (var i = 0; i < n._items.length; i++) {
                if (n._items[i].id == "FinalTouches") {
                    var s = {
                        id: r.id,
                        title: "Custom",
                        image: e,
                        model: e
                    };
                    var o = i;
                    var u = n._items[i].item.length;
                    n._items[i].item.push(s);
                    fabric.Image.fromURL(e, function(e) {
                        n._items[o].item[u].object = e
                    });
                    return
                }
            }
        }
    };
    n.exportProc = function(e, t) {
        var r, i, s, o;
        if (n._userImg) {
            s = n._userImg.left - n._userImg.width / 2;
            o = n._userImg.top - n._userImg.height / 2;
            r = n._userImg.width;
            i = n._userImg.height;
            var u = 600,
                a = 600,
                f = r,
                l = i;
            var c;
            if (e == "jpg") {
                c = n._preCanvas.toDataURL({
                    format: "jpeg",
                    quality: .8,
                    left: s,
                    top: o,
                    width: r,
                    height: i
                })
            } else {
                c = n._preCanvas.toDataURL({
                    format: "png",
                    left: s,
                    top: o,
                    width: r,
                    height: i
                })
            } 
            if (t == "small") {
                u = 400;
                a = 300
            } else if (t == "medium") {
                u = 800;
                a = 600
            } else {
                u = 1600;
                a = 1200
            }
            
            if (f > l) {
                if (f > u) {
                    l *= u / f;
                    f = u
                }
            } else {
                if (l > a) {
                    f *= a / l;
                    l = a
                }
            }
            var h = document.createElement("canvas");
            h.width = f;
            h.height = l;
            var p = new Image;
            p.onload = function() {
                var t = h.getContext("2d");
                drawImageIOSFix(t, p, 0, 0, p.width, p.height, 0, 0, f, l);
                var n;
                if (e == "jpg") {
                    n = h.toDataURL("image/jpeg;base64;");
                    n = n.replace("image/png", "image/octet-stream")
                } else {
                    n = h.toDataURL("image/png;base64;");
                    n = n.replace("image/png", "image/octet-stream")
                }
                document.location.href = n
            };
            p.src = c
        } else {
            s = n._left;
            o = n._top;
            r = n._rect.width;
            i = n._rect.height;
            var u = 600,
                a = 600,
                f = r,
                l = i;
            var c;
            if (e == "jpg") {
                c = n._canvas.toDataURL({
                    format: "jpeg",
                    quality: .8,
                    left: s,
                    top: o,
                    width: r,
                    height: i
                })
            } else {
                c = n._canvas.toDataURL({
                    format: "png",
                    left: s,
                    top: o,
                    width: r,
                    height: i
                })
            } if (t == "small") {
                u = 400;
                a = 300
            } else if (t == "medium") {
                u = 800;
                a = 600
            } else {
                u = 1600;
                a = 1200
            } if (f > l) {
                if (f > u) {
                    l *= u / f;
                    f = u
                }
            } else {
                if (l > a) {
                    f *= a / l;
                    l = a
                }
            }
            var h = document.createElement("canvas");
            h.width = f;
            h.height = l;
            var p = new Image;
            p.onload = function() {
                var t = h.getContext("2d");
                drawImageIOSFix(t, p, 0, 0, p.width, p.height, 0, 0, f, l);
                var n;
                if (e == "jpg") {
                    n = h.toDataURL("image/jpeg;base64;");
                    n = n.replace("image/png", "image/octet-stream")
                } else {
                    n = h.toDataURL("image/png;base64;");
                    n = n.replace("image/png", "image/octet-stream")
                }
                document.location.href = n
            };
            p.src = c
			n._imgData = c;
        }
    }; {
        n._initialize("design-stage")
    }
}